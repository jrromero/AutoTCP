# J.R. Romero, A. Ramírez, A. Fuentes-Almoguera, C. García.
# "Automated machine learning for test case prioritisation".
# 2024.

# Script used to calculate the APFDC score of the ensembles trained in the ahmadreza dataset with the last 50 versions of each dataset
# Uses the .csv files generated by apfdc_score.py

import pandas as pd
import os

curdir = os.path.dirname(os.path.abspath(__file__))

results_folder = 'apfdc_scores_%s'
executions = [1, 2, 3, 4, 5]

datasets_path = 'dataset/datasets/data/versions/ahmadreza'
datasets = os.listdir(os.path.join(curdir, datasets_path))

for execution in executions:
	results = pd.DataFrame(columns=['dataset', 'apfdc'])

	for dataset in datasets:
		data = pd.read_csv(os.path.join(curdir, results_folder % execution, dataset + '.csv'))
		data = data.sort_values(by=['version'], ignore_index=True)
		
		# If more than 50 versions, take the last 50
		if data.shape[0] >= 50:
			results = results.append({'dataset': dataset, 'apfdc': str(data['apfdc'].iloc[-50:].mean()) + '+-' + str(data['apfdc'].iloc[-50:].std())}, ignore_index=True)
		# If less than 50 versions, take all
		else:
			results = results.append({'dataset': dataset, 'apfdc': str(data['apfdc'].mean()) + '+-' + str(data['apfdc'].std())}, ignore_index=True)

	results = results.sort_values(by=['dataset'], ignore_index=True, key=lambda x: x.str.lower())
	results.to_csv(os.path.join(curdir, results_folder % execution, 'apfdc_scores_50.csv'), index=False)